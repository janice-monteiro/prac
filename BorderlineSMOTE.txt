#!pip install imbalanced-learn
from collections import Counter 
from sklearn.datasets import make_classification
from matplotlib import pyplot
from numpy import where # check version number)
from imblearn import *
from imblearn.over_sampling import BorderlineSMOTE
X, y=make_classification(n_samples=10000, n_features=2, n_redundant=0, 
                         n_clusters_per_class=1, weights=[0.99], flip_y=0, 
                         random_state=1)
counter = Counter(y)
print(counter) 
#transform the dataset
oversample = BorderlineSMOTE() 
X, y = oversample.fit_resample(X, y)
#summarize the new class distribution
counter = Counter(y) 
print(counter)

#scatter plot of examples by class label 
for label, _ in counter.items():
    row_ix = where(y == label)[0]
    pyplot.scatter(X[row_ix, 0], X[row_ix, 1], label=str(label))
pyplot.legend()
pyplot.show()